{"version":3,"sources":["newsService.js"],"names":["ARTICLES_URL","SOURCES_URL","defaultSrc","newsService","carouselInterval","carouselCallback","carouselIntervalId","refreshIntervalId","category","source","articles","allSources","page","sourcesPerPage","articleIndex","getArticles","onSuccess","xhr","XMLHttpRequest","url","NEWS_API_KEY","open","onreadystatechange","readyState","DONE","status","res","JSON","parse","responseText","send","getSources","getNPageSources","sources","n","slice","getNextPageSources","length","getArticleEveryNSeconds","seconds","callback","setInterval","getPreviousArticle","window","clearInterval","subscribe","refreshMinutes","guessSourceIdByName","name","find","s","toLowerCase","id","changeSource","onChange","Array","isArray","unsubscribe"],"mappings":"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","file":"newsService.js","sourcesContent":["import { CONSTANTS } from 'constants';\n\nconst ARTICLES_URL = '//newsapi.org/v1/articles';\nconst SOURCES_URL = '//newsapi.org/v1/sources';\nconst defaultSrc = 'cnn';\n\nexport const newsService = (() => {\n    let carouselInterval;\n    let carouselCallback;\n    let carouselIntervalId;\n    let refreshIntervalId;\n    let category = '';\n    let source = defaultSrc;\n    let articles = [];\n    let allSources = null;\n    let page = 0;\n    let sourcesPerPage = 12;\n    let articleIndex = 0;\n\n    const getArticles = (onSuccess) => {\n        let xhr = new XMLHttpRequest();\n        let url = `${ARTICLES_URL}?source=${source}&apiKey=${CONSTANTS.NEWS_API_KEY}`;\n        xhr.open('GET', url, true);\n        xhr.onreadystatechange = () => {\n            if(xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\n                let res = JSON.parse(xhr.responseText);\n                articles = res.articles;\n                if (onSuccess) onSuccess(articles);\n            }\n        };\n        xhr.send();\n    }\n\n    const getSources = (onSuccess) => {\n        if (newsService.allSources) return onSuccess(getNPageSources(0));\n\n        let xhr = new XMLHttpRequest();\n        let url = `${SOURCES_URL}?category=${newsService.category}&country=us&language=en`;\n        xhr.open('GET', url, true);\n        xhr.onreadystatechange = () => {\n            if(xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\n                let res = JSON.parse(xhr.responseText);\n                newsService.allSources = res.sources;\n                onSuccess(getNPageSources(0));\n            }\n        };\n        xhr.send();\n    }\n\n    const getNPageSources = (n) => {\n        return newsService.allSources.slice(n * sourcesPerPage, (n + 1) * sourcesPerPage);\n    }\n\n    const getNextPageSources = () => {\n        if (!newsService.allSources) return;\n        page = sourcesPerPage * (page + 1) <= newsService.allSources.length ? page + 1 : 0;\n        return getNPageSources(page);\n    }\n\n    const getArticleEveryNSeconds = (seconds, callback) => {\n        carouselInterval = seconds;\n        carouselCallback = callback;\n        carouselCallback(articles[articleIndex]);\n        carouselIntervalId = setInterval(() => {\n            articleIndex = !!articles[articleIndex + 1] ? articleIndex + 1 : 0;\n            carouselCallback(articles[articleIndex]);\n        }, 10 * 1000);\n    }\n\n    const getPreviousArticle = () => {\n        window.clearInterval(carouselIntervalId);\n        articleIndex = articleIndex !== 0 ? articleIndex - 1 : articles.length - 1;\n        getArticleEveryNSeconds(carouselInterval, carouselCallback);\n    }\n\n    const subscribe = (seconds, refreshMinutes, callback) => {\n        newsService.getArticles(() => {\n            getArticleEveryNSeconds(seconds, callback);\n        });\n\n        refreshIntervalId = setInterval(getArticles, refreshMinutes * 60000);\n    }\n\n    const guessSourceIdByName = (name) => {\n        let source = newsService.allSources.find((s) => {\n            return s.name.toLowerCase() === name.toLowerCase();\n        });\n\n        if (source) return source.id;\n    }\n\n    const changeSource = (name, onChange) => {\n        if (!Array.isArray(newsService.allSources) || !newsService.allSources.length) {\n            newsService.getSources(() => {\n                source = guessSourceIdByName(name) || source;\n                onChange(source)\n            })\n        } else {\n            source = guessSourceIdByName(name) || source;\n            onChange(source);\n        }\n    }\n\n    const unsubscribe = () => {\n        window.clearInterval(carouselIntervalId);\n        window.clearInterval(refreshIntervalId);\n    }\n\n    return { \n        allSources, \n        category, \n        changeSource,\n        getArticles, \n        getArticleEveryNSeconds, \n        getPreviousArticle,\n        getSources, \n        getNextPageSources,\n        subscribe,\n        unsubscribe\n    }\n\n})();"]}